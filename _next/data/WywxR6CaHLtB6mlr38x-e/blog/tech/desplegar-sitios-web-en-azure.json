{"pageProps":{"results":[{"id":9,"title":"Crear un sitio con Azure Static Sites","description":"En esta ocasión vamos a crear un sitio statico y lo hostearemos en la nube de Microsoft.","content":"Durante mucho tiempo estuve buscando opciones para poder crear sitios estáticos y publicarlos rápidamente. Desupés de mucha experimentación con decenas de servicios, decidi que este es el stack con el que puedes desarrollar a mayor velocidad.\n\n\nAntes de empezar necesitas tener instalado NodeJS y necesitas un editor de código (cómo VSCode)\n\n\n- [Aquí](https://nodejs.org/en/download/) puedes descargar Node. \n- [Aquí]() puedes descargar VSCode.\n\n\nFinalmente, este tutorial requieres que tengas una cuenta activa de Github y una cuenta de Microsoft Azure.\n\n\n- [Aqui]() puedes crear tu cuenta de Github.\n- [Aquí]() puedes crear tu cuenta de Azure. \n\n\nFinalmente, tenemos que tener acceso a nuestra Terminal, si estas en mac, o a la pantalla de comandos, si estas en Windows. \n\n\n## 1. Creando nuestro sitio muestra.\nPara este ejemplo generaremos un sitio estatico usando html y tailwindcss. El primer paso es crear una carpeta llamada `sitio-estatico-tailwind`. Dentro de esta carpeta guardaremos todos los archivos que usaremos para generar nuestro sitio.\n\n\n```shell\nmkdir sitio-estatico-tailwind\ncd sitio-estatico-tailwind\n```\n\n\nEstando dentro de la carpeta `sitio-estatico-tailwind` iniciemos un archivo `package.json`. Este archivo llevará el seguimiento de los paquetes de javascript que usaremos para este proyecto.\n\n```shell\nnpm init -y\n```\nAhora instalaremos [Tailwind](https://tailwindcss.com/docs). Para hacerlo, desde la terminal agregar los siguientes comandos:\n\n```shell\nnpm install -D tailwindcss@latest postcss@latest autoprefixer@latest postcss-cli@latest\nnpx tailwindcss init -p\ntouch styles.css\nmkdir str\n```\n\nEsto nos generará la estructura básica de archivos que necesitamos para utilizar Tailwind desde nuestro sitio estático. El siguiente paso es abrir el archvio `styles.css` y agregar el siguiente código:\n\n```css\n/* styles.css */\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\nAhora abrimos nuestro archivo `package.json` y editamos valor de la llave `scripts` :\n\n```json\n  \"scripts\": {\n    \"build\": \"postcss styles.css -o src/styles.css\"\n  },\n```\n\nPara este punto, debemos tener dentro de nuestra carpeta `sitio-estatico-tailwind` un folder llamado `src`, desplazemonos al mismo y generemos un archivo llamado `index.html` y copiamos este código:\n\n```html\n<!--index.html-->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>¿Como hicimos esta página?</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n</head>\n<body>\n    <div class=\"w-screen h-screen bg-blue-200 flex items-center justify-center\">\n        <h1 class=\"text-6xl font-semibold\">Hola! ✌️</h1>\n    </div>\n</body>\n</html>\n```\n\nListo tenemos una página estatica sencilla estilizada con TailwindCSS. Cómo paso final, utilizaremos la función *Purge* de Tailwind. Esta función procesa nuestro archivo `styles.css` y deja únicamente las clases que utilizamos en nuestros arhivos `.html`. Este paso es importante porque reducimos considerablemente el peso de nuestra página en producción.\n\nPara activar esta función busquemos la carpeta `tailwind.config.js` y editemos el valor `purge`:\n\n```js\n// tailwind.config.js\n  purge: {\n    enabled: true,\n    content: ['src/*.html']\n  }\n```\n\n## 2. Crear un Repositiorio para nuestro sitio en Github\nGithub es una plataforma que nos permite llevar el control de versiones en nuestras aplicaciones web. Necesitamos crear un nuevo repositorio y cargar nuestra carpeta `src`. \n\n```shell\ncd src\ngit init\ngit add *\ngit commit -m\"First Commit\"\ngit branch -M main \ngit remote add origin git@github.com:<github_username>/<name_of_the_repository>\ngit push -u origin main  \n```\n\n## 5. Creando una cuenta de Azure\nAzure es la nube de Microsoft, tiene decenas de funciones. Puede hostear desde sitios estáticos sencillos (como el que estamos por realizar) hasta aplicaciones que escalan casi al infinito.\nEs muy sencillo crear una cuenta de Azure, solo debes visitar este [sitio]() y seguir las instrucciones.\n\n## 6. Publicar\nYa que tenemos nuestra cuenta de Azure, debemos buscar el modulo llamado `Static Web Apps` y abrirlo. Una vez abierto, buscar la opción `create` y darle click. Esto nos deplegará una serie de opciones para configurar nuestro sitio. Llenar toda la información solicitada. \nSubscription: Pay-as-you-go (O la que te aparezca por default)\nResource Group: static-sites\nName: <nombre de tu aplicación>\nHosting Plan: Free\nRegion for Azure: Deja la opción que aparece por default\nSouce: Github\nGithub Account: Da click al botón de \"Sign In with Github\" y coloca los datos de tu cuenta de Github en el pop-up que se va a abrir.\nOrganization: Escoge la opción que te de por default\nRepository: Busca el nombre del repositiorio que contiene los archivos de tu sitio estatico\nBranch: Escoge la opción que te de por default (En este caso sería main)\n\n\n## 7. Comprar un dominio web\nExisten cientos de p'agianas que te permiten comprar nombres de dominios y la mayoría ofrece la misma funcionalidad. En esta ocasión voy a utilizar [Namecheap](https://namecheap.com/).\n\nCrea una cuenta dentro de la página, busca un dominio de tu agrado y compralo. Ya que lo tengas, podemos proceder al siguiente paso.\n\n## 8. Obtener certificado SSL\nConectar nuestro dominio con el sitio estático.\n\nOtros liks de interes:\n- [HighlightJS](https://highlightjs.org/) : Este paquete agrega estilos a los códigos de bloque de nuestro Markdownnn.","slug":"desplegar-sitios-web-en-azure","published_at":"2021-12-07T02:42:47.891Z","created_at":"2021-10-28T01:41:05.818Z","updated_at":"2021-12-07T13:20:35.913Z","user":{"id":1,"username":"gmarr","email":"me@gmarr.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-09-27T19:44:38.166Z","updated_at":"2021-09-27T19:46:35.202Z"}}],"source":{"compiledSource":"var d=Object.defineProperty,u=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(e,i,t)=>i in e?d(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t,a=(e,i)=>{for(var t in i||(i={}))o.call(i,t)&&l(e,t,i[t]);if(s)for(var t of s(i))r.call(i,t)&&l(e,t,i[t]);return e},p=(e,i)=>u(e,m(i));var c=(e,i)=>{var t={};for(var n in e)o.call(e,n)&&i.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&s)for(var n of s(e))i.indexOf(n)<0&&r.call(e,n)&&(t[n]=e[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,i=c(n,[\"components\"]);return mdx(MDXLayout,p(a(a({},layoutProps),i),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Durante mucho tiempo estuve buscando opciones para poder crear sitios est\\xE1ticos y publicarlos r\\xE1pidamente. Desup\\xE9s de mucha experimentaci\\xF3n con decenas de servicios, decidi que este es el stack con el que puedes desarrollar a mayor velocidad.\"),mdx(\"p\",null,\"Antes de empezar necesitas tener instalado NodeJS y necesitas un editor de c\\xF3digo (c\\xF3mo VSCode)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://nodejs.org/en/download/\"}),\"Aqu\\xED\"),\" puedes descargar Node. \"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"\"}),\"Aqu\\xED\"),\" puedes descargar VSCode.\")),mdx(\"p\",null,\"Finalmente, este tutorial requieres que tengas una cuenta activa de Github y una cuenta de Microsoft Azure.\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"\"}),\"Aqui\"),\" puedes crear tu cuenta de Github.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"\"}),\"Aqu\\xED\"),\" puedes crear tu cuenta de Azure. \")),mdx(\"p\",null,\"Finalmente, tenemos que tener acceso a nuestra Terminal, si estas en mac, o a la pantalla de comandos, si estas en Windows. \"),mdx(\"h2\",null,\"1. Creando nuestro sitio muestra.\"),mdx(\"p\",null,\"Para este ejemplo generaremos un sitio estatico usando html y tailwindcss. El primer paso es crear una carpeta llamada \",mdx(\"inlineCode\",{parentName:\"p\"},\"sitio-estatico-tailwind\"),\". Dentro de esta carpeta guardaremos todos los archivos que usaremos para generar nuestro sitio.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell\"}),`mkdir sitio-estatico-tailwind\ncd sitio-estatico-tailwind\n`)),mdx(\"p\",null,\"Estando dentro de la carpeta \",mdx(\"inlineCode\",{parentName:\"p\"},\"sitio-estatico-tailwind\"),\" iniciemos un archivo \",mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),\". Este archivo llevar\\xE1 el seguimiento de los paquetes de javascript que usaremos para este proyecto.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell\"}),`npm init -y\n`)),mdx(\"p\",null,\"Ahora instalaremos \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://tailwindcss.com/docs\"}),\"Tailwind\"),\". Para hacerlo, desde la terminal agregar los siguientes comandos:\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell\"}),`npm install -D tailwindcss@latest postcss@latest autoprefixer@latest postcss-cli@latest\nnpx tailwindcss init -p\ntouch styles.css\nmkdir str\n`)),mdx(\"p\",null,\"Esto nos generar\\xE1 la estructura b\\xE1sica de archivos que necesitamos para utilizar Tailwind desde nuestro sitio est\\xE1tico. El siguiente paso es abrir el archvio \",mdx(\"inlineCode\",{parentName:\"p\"},\"styles.css\"),\" y agregar el siguiente c\\xF3digo:\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-css\"}),`/* styles.css */\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n`)),mdx(\"p\",null,\"Ahora abrimos nuestro archivo \",mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),\" y editamos valor de la llave \",mdx(\"inlineCode\",{parentName:\"p\"},\"scripts\"),\" :\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-json\"}),`  \"scripts\": {\n    \"build\": \"postcss styles.css -o src/styles.css\"\n  },\n`)),mdx(\"p\",null,\"Para este punto, debemos tener dentro de nuestra carpeta \",mdx(\"inlineCode\",{parentName:\"p\"},\"sitio-estatico-tailwind\"),\" un folder llamado \",mdx(\"inlineCode\",{parentName:\"p\"},\"src\"),\", desplazemonos al mismo y generemos un archivo llamado \",mdx(\"inlineCode\",{parentName:\"p\"},\"index.html\"),\" y copiamos este c\\xF3digo:\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-html\"}),`<!--index.html-->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>\\xBFComo hicimos esta p\\xE1gina?</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n</head>\n<body>\n    <div class=\"w-screen h-screen bg-blue-200 flex items-center justify-center\">\n        <h1 class=\"text-6xl font-semibold\">Hola! \\u270C\\uFE0F</h1>\n    </div>\n</body>\n</html>\n`)),mdx(\"p\",null,\"Listo tenemos una p\\xE1gina estatica sencilla estilizada con TailwindCSS. C\\xF3mo paso final, utilizaremos la funci\\xF3n \",mdx(\"em\",{parentName:\"p\"},\"Purge\"),\" de Tailwind. Esta funci\\xF3n procesa nuestro archivo \",mdx(\"inlineCode\",{parentName:\"p\"},\"styles.css\"),\" y deja \\xFAnicamente las clases que utilizamos en nuestros arhivos \",mdx(\"inlineCode\",{parentName:\"p\"},\".html\"),\". Este paso es importante porque reducimos considerablemente el peso de nuestra p\\xE1gina en producci\\xF3n.\"),mdx(\"p\",null,\"Para activar esta funci\\xF3n busquemos la carpeta \",mdx(\"inlineCode\",{parentName:\"p\"},\"tailwind.config.js\"),\" y editemos el valor \",mdx(\"inlineCode\",{parentName:\"p\"},\"purge\"),\":\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-js\"}),`// tailwind.config.js\n  purge: {\n    enabled: true,\n    content: ['src/*.html']\n  }\n`)),mdx(\"h2\",null,\"2. Crear un Repositiorio para nuestro sitio en Github\"),mdx(\"p\",null,\"Github es una plataforma que nos permite llevar el control de versiones en nuestras aplicaciones web. Necesitamos crear un nuevo repositorio y cargar nuestra carpeta \",mdx(\"inlineCode\",{parentName:\"p\"},\"src\"),\". \"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell\"}),`cd src\ngit init\ngit add *\ngit commit -m\"First Commit\"\ngit branch -M main \ngit remote add origin git@github.com:<github_username>/<name_of_the_repository>\ngit push -u origin main  \n`)),mdx(\"h2\",null,\"5. Creando una cuenta de Azure\"),mdx(\"p\",null,`Azure es la nube de Microsoft, tiene decenas de funciones. Puede hostear desde sitios est\\xE1ticos sencillos (como el que estamos por realizar) hasta aplicaciones que escalan casi al infinito.\nEs muy sencillo crear una cuenta de Azure, solo debes visitar este `,mdx(\"a\",a({parentName:\"p\"},{href:\"\"}),\"sitio\"),\" y seguir las instrucciones.\"),mdx(\"h2\",null,\"6. Publicar\"),mdx(\"p\",null,\"Ya que tenemos nuestra cuenta de Azure, debemos buscar el modulo llamado \",mdx(\"inlineCode\",{parentName:\"p\"},\"Static Web Apps\"),\" y abrirlo. Una vez abierto, buscar la opci\\xF3n \",mdx(\"inlineCode\",{parentName:\"p\"},\"create\"),` y darle click. Esto nos deplegar\\xE1 una serie de opciones para configurar nuestro sitio. Llenar toda la informaci\\xF3n solicitada.\nSubscription: Pay-as-you-go (O la que te aparezca por default)\nResource Group: static-sites\nName: <nombre de tu aplicaci\\xF3n>\nHosting Plan: Free\nRegion for Azure: Deja la opci\\xF3n que aparece por default\nSouce: Github\nGithub Account: Da click al bot\\xF3n de \"Sign In with Github\" y coloca los datos de tu cuenta de Github en el pop-up que se va a abrir.\nOrganization: Escoge la opci\\xF3n que te de por default\nRepository: Busca el nombre del repositiorio que contiene los archivos de tu sitio estatico\nBranch: Escoge la opci\\xF3n que te de por default (En este caso ser\\xEDa main)`),mdx(\"h2\",null,\"7. Comprar un dominio web\"),mdx(\"p\",null,\"Existen cientos de p'agianas que te permiten comprar nombres de dominios y la mayor\\xEDa ofrece la misma funcionalidad. En esta ocasi\\xF3n voy a utilizar \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://namecheap.com/\"}),\"Namecheap\"),\".\"),mdx(\"p\",null,\"Crea una cuenta dentro de la p\\xE1gina, busca un dominio de tu agrado y compralo. Ya que lo tengas, podemos proceder al siguiente paso.\"),mdx(\"h2\",null,\"8. Obtener certificado SSL\"),mdx(\"p\",null,\"Conectar nuestro dominio con el sitio est\\xE1tico.\"),mdx(\"p\",null,\"Otros liks de interes:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://highlightjs.org/\"}),\"HighlightJS\"),\" : Este paquete agrega estilos a los c\\xF3digos de bloque de nuestro Markdownnn.\")))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}